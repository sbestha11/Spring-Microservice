package com.javaexpress.service;


import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.javaexpress.dto.UserDto;
import com.javaexpress.helper.UserMappingHelper;
import com.javaexpress.model.User;
import com.javaexpress.repository.UserRepository;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class UserServiceImpl implements UserService{

	@Autowired
	private UserRepository userRepository;

	@Override
	public UserDto save(UserDto userDto) {
		User user = UserMappingHelper.map(userDto);
		log.info("user {}",user);
		//User dbUser = userRepository.save(user);
	//	UserDto result = UserMappingHelper.map(dbUser);
		return null;
	}

	@Override
	public UserDto findById(Integer userId) {
		return null;
		/*
		 * return userRepository.findById(userId) .map(UserMappingHelper::map)
		 * .orElseThrow(() -> new RuntimeException("User not found in Db"));
		 */}

	@Override
	public List<UserDto> findAll() {
		return null;
//		userRepository.findAll().stream()
//				.sorted(Comparator.comparing(User::getUserId))
//				.map(UserMappingHelper::map)
//				.collect(Collectors.toList());
	}

	@Override
	public UserDto update(Integer userId, UserDto userDto) {
		
		return null;
	}

	@Override
	public void delteById(Integer userId) {
		userRepository.deleteById(userId);
	}

	@Override
	public UserDto findByUsername(String username) {
		return null;
	}
}

